{
  "swagger" : "2.0",
  "info" : {
    "description" : "Reference data command service API is a microserice that serves command side endpoints for the reference data example application built on top of light-eventuate.",
    "version" : "1.0.0",
    "title" : "Reference data command service API",
    "contact" : {
      "email" : "stevehu@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "eventuate.networknt.com",
  "basePath" : "/v1",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/reference" : {
      "post" : {
        "description" : "Create a Reference data object with Id",
        "operationId" : "add",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Created Reference Data object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Reference"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ReferenceData"
            }
          }
        },
        "security" : [ {
          "reference_auth" : [ "reference.w" ]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      },
      "put" : {
        "description" : "Return the updated reference data object",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "id",
          "in" : "body",
          "description" : "The event id for update",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ReferenceData"
            }
          }
        },
        "security" : [ {
          "reference_auth" : [ "reference.w" ]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      }
    },
    "/reference/{id}" : {
      "delete" : {
        "description" : "Delete a reference by Id",
        "operationId" : "deleteById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of reference",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Reference not found"
          }
        },
        "security" : [ {
          "reference_auth" : [ "reference.w" ]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      }
    }
  },
  "securityDefinitions" : {
    "reference_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://localhost:8080/oauth2/code",
      "flow" : "implicit",
      "scopes" : {
        "reference.w" : "write reference"
      }
    }
  },
  "definitions" : {
    "ReferenceItem" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "linkStr" : {
          "type" : "string"
        },
        "valueEn" : {
          "type" : "string"
        },
        "valueFr" : {
          "type" : "string"
        },
        "valueOther" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "ReferenceItem"
      }
    },
    "ReferenceData" : {
      "type" : "object",
      "properties" : {
        "referenceName" : {
          "type" : "string",
          "description" : "title of reference"
        },
        "description" : {
          "type" : "string",
          "description" : "description of reference"
        },
        "content" : {
          "type" : "array",
          "xml" : {
            "name" : "content",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/ReferenceItem"
          }
        }
      },
      "xml" : {
        "name" : "ReferenceData"
      }
    }
  }
}